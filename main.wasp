app mytodo {
  wasp: {
    version: "^0.11.6"
  },
  title: "mytodo",
  db: {
    system: PostgreSQL,
  },
  auth: {
    userEntity: User,
    methods:{
      usernameAndPassword: {},
    },
    onAuthFailedRedirectTo: "/login",
  }
}

route RootRoute { path: "/", to: MainPage }
page MainPage {
  authRequired:true,
  component: import Main from "@client/pages/MainPage.tsx"
} 

route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import Signup from "@client/pages/SignupPage.tsx"
}

route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import Login from "@client/pages/LoginPage.tsx"
}

entity Task {=psl
  id  Int  @id @default (autoincrement())
  descr String
  isDone Boolean @default(false)
  user        User?    @relation(fields: [userId], references: [id])
  userId      Int?
psl=}

entity User {=psl
    id       Int    @id @default(autoincrement())
    username String @unique
    password String
    tasks    Task[]
psl=}

query getTasks {
  fn: import {getTasks} from "@server/queries.js",
  entities: [Task]
}

action createTask {
  fn: import {createTask} from "@server/actions.js",
  entities: [Task]
}

action updateTask {
  fn: import { updateTask } from "@server/actions.js",
  entities: [Task]
}